{"version":3,"file":"static/js/326.05af3e06.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.jsx","components/errorMessage/ErrorMessage.jsx","components/pages/SinglePage.jsx","utils/upgradeToHttps.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.jsx","utils/setContent.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img\n        src={avengers}\n        alt=\"Avengers\"\n      />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img\n        src={avengersLogo}\n        alt=\"Avengers logo\"\n      />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import './errorMessage.scss';\n\nimport ErrorImage from './img/error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      src={ErrorImage}\n      className=\"error-message-img\"\n      alt=\"Error message\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\nimport AppBanner from '../../components/appBanner/AppBanner';\n\nconst SinglePage = ({Component, dataType}) => {\n  const {id} = useParams(); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º comicId –∏–∑ params {comicId: '77343'}\n  const [data, setData] = useState(null); // —Å—é–¥–∞ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∏–ª–∏ –æ–±—ä–µ–∫—Ç –∫–æ–º–∏–∫—Å–∞ –∏–ª–∏ –æ–±—ä–µ–∫—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç dataType, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –¥–∞—Ç–∞\n\n  const {process, setProcess, clearError, getComic, getCharacterByName} = useMarvelService();\n\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id)\n          .then(onDataLoaded)\n          .then(() => setProcess('confirmed'));\n        break;\n      case 'character':\n        getCharacterByName(id)\n          .then(onDataLoaded)\n          .then(() => setProcess('confirmed'));\n        break;\n      default:\n        console.warn(`‚ö† –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π dataType: ${dataType}`);\n    }\n  };\n\n  const onDataLoaded = data => {\n    setData(data);\n  };\n\n  // üî• –ó–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–∫–∏: –∂–¥–µ–º, –ø–æ–∫–∞ char –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è (–≤–∞—Ä–∏–∞–Ω—Ç, —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–∂–µ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–∏—Ü—ã)\n  // if (!char) {\n  //     return <p>Loading...</p>; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–ø–∏–Ω–Ω–µ—Ä\n  // }\n\n  // const errorMessage = error ? <ErrorMessage /> : null;\n  // const spinner = loading ? <Spinner /> : null;\n  // const content = !(loading || error || !data) ? <Component data={data} /> : null;\n\n  return (\n    <>\n      <AppBanner />\n      {setContent(process, Component, data)}\n    </>\n  );\n};\n\nexport default SinglePage;\n","\r\nfunction upgradeToHttps(url) {\r\n    if (typeof url !== 'string') return url;  // –∑–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ—Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–ª—É—á–∞–π–Ω–æ –ø–æ–ø–∞—Å—Ç—å –∏ –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É\r\n    if (url.startsWith('http://')) {\r\n        return url.replace('http://', 'https://')  // –∑–∞–º–µ–Ω–∞ http –Ω–∞ https\r\n    }\r\n    return url; \r\n}\r\n\r\nexport default upgradeToHttps;","import {useHttp} from '../hooks/http.hook';\nimport upgradeToHttps from '../utils/upgradeToHttps';\n\nconst useMarvelService = () => {\n  const {process, setProcess, request, clearError} = useHttp(); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Å—É—â–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ useHttp\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/'; // _ –≥–æ–≤–æ—Ä–∏—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞–º —á—Ç–æ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å\n  const _apiKey = 'apikey=48016fbc64705610f2040226da4655f7';\n  const _baseOffSet = 210;\n\n  // –¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π, –ø–æ—Å–∫–æ–ª—å–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è const result –Ω—É–∂–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –æ—Ç–≤–µ—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞\n  const getAllCharacters = async (offset = _baseOffSet) => {\n    const result = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`); // —Å—é–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å –º–∞—Å—Å–∏–≤–æ–º –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π\n\n    return result.data.results.map(char => _transformCharacter(char)); // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ —É–∂–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤\n  };\n\n  const getCharacter = async id => {\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`); // —Å—é–¥–∞ –ø–æ–º–µ—â–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–∫—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö\n\n    if (!result) {\n      console.warn(`‚ö† –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É`);\n      return {name: 'Unknown Character', description: 'No data available', thumbnail: 'https://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'};\n    }\n\n    // —Ä–µ—Ç–µ—Ä–Ω–∏–º —É–∂–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –Ω–∞–º –¥–∞–Ω–Ω—ã–µ\n    return _transformCharacter(result.data.results[0]); // (–æ–±—ä–µ–∫—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞)\n  };\n\n  const _transformCharacter = char => {\n    // —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª—å—à–æ–π –æ–±—ä–µ–∫—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –≤ –Ω–µ–±–æ–ª—å—à–æ–π –æ–±—ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–∞–º –¥–∞–Ω–Ω—ã–º–∏\n    return {\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 200)}...`\n        : 'There is no description for this character.',\n      thumbnail: upgradeToHttps(char.thumbnail.path + '.' + char.thumbnail.extension),  \n      id: char.id,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const result = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n\n    return result.data.results.map(comics => _transformComics(comics));\n  };\n\n  const getComic = async id => {\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\n    return _transformComics(result.data.results[0]);\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'Not available',\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} h.`\n        : 'No information about the number of pages',\n      thumbnail: upgradeToHttps(comics.thumbnail.path + '.' + comics.thumbnail.extension),\n      language: comics.textObjects.language || 'en-us',\n      url: comics.urls[0].url,\n    };\n  };\n\n  const getCharacterByName = async charName => {\n    const result = await request(`${_apiBase}characters?name=${charName}&${_apiKey}`);\n\n    if (!result.data.results[0]) {\n      return {};\n    }\n    return _transformCharacter(result.data.results[0]);\n  };\n\n  // –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –∏–∑ –Ω–µ–≥–æ –º—ã –º–æ–∂–µ–º –≤–µ—Ä–Ω—É—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö\n  return {\n    process,\n    setProcess,\n    clearError,\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComic,\n    getCharacterByName,\n  };\n};\n\nexport default useMarvelService;\n","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n  const [process, setProcess] = useState('waiting'); // —Å–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞ (—Å—Ç—ç–π—Ç –º–∞—à–∏–Ω—ã)\n\n  // –¥–µ–ª–∞–µ–º –∑–∞—Ä–æ—Å –∏ –ø–æ–º–µ—â–∞–µ–º –≤ request\n  // –∑–¥–µ—Å—å –ø–µ—Ä–µ–¥–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–∞–∫ –¥–ª—è –ø–æ—Å—Ç-–∑–∞–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã —É–º–µ—Ç—å –¥–µ–ª–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n  const request = useCallback(\n    async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n      setProcess('loading');\n\n      // —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å –∏ –Ω–µ –±—É–¥–µ—Ç –µ–≥–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ then/catch, –ø–æ—ç—Ç–æ–º—É —á—Ç–æ–±—ã –±—ã–ª–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫—É –∏—Å–ø–æ–ª—å–∑—É–µ–º try/catch\n      try {\n        const response = await fetch(url, {method, body, headers}); // –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ response\n\n        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –Ω–µ –û–ö —Ç–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –±–ª–æ–∫–∞ catch\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        // .json() —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –≤–∏–¥–µ JavaScript-–æ–±—ä–µ–∫—Ç–∞\n        const data = await response.json(); // –≤ –¥–∞—Ç—É –ø–æ–º–µ—â–∞–µ–º js –æ–±—ä–µ–∫—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–Ω–Ω–π –∏–∑ JSON-–æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞, await –∂–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n        return data; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–µ—Ç–æ–¥–∞ request\n      } catch (e) {\n        setProcess('error');\n        // throw e; // –∏–∑ catch –≤—ã–∫–∏–¥—ã–≤–∞–µ–º –æ—à–∏–±–∫—É - –±—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –º–æ–¥–∞–ª–∫–∞ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏\n        console.warn('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', e.message); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ\n        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤–º–µ—Å—Ç–æ –≤—ã–±—Ä–æ—Å–∞ –æ—à–∏–±–∫–∏\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setProcess('loading');\n  }, []); // —Ñ—É–Ω–∫—Ü–∏—è –ø–æ –æ—á–∏—Å—Ç–∫–µ –æ—à–∏–±–æ–∫ (–Ω–∞–≥–ª—è–¥–Ω—ã –ø—Ä–∏–º–µ—Ä –±—ã–ª –≤ —Ä–∞–Ω–¥–æ–º–ß–∞—Ä)\n\n  return {process, setProcess, request, clearError}; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ —Ö—É–∫–∞ –æ–±—ä–µ–∫—Ç —Å –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –¥–ª —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–¥–µ —É–≥–æ–¥–Ω–æ\n}; // —ç—Ç–æ—Ç —Ö—É–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª—é–±—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.\n\n// –¥–∞–ª–µ–µ —Å—Ç–æ–∏—Ç –∑–∞–¥–∞—á–∞ —Å–≤—è–∑–∞—Ç—å —ç—Ç–æ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫ —Å –Ω–∞—à–∏–º —É–∂–µ –≥–æ—Ç–æ–≤—ã–º –º–∞—Ä–≤–µ–ª–°–µ—Ä–≤–∏—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ–ø—Ä–µ–¥. –∞–¥—Ä–µ—Å–∞ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ\n// –ø—Ä–µ–≤—Ä–∞—Ç–∏–º –º–∞—Ä–≤–µ–ª–°–µ—Ä–≤–∏—Å –≤ —Ö—É–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è –≥–æ—Ç–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—à–µ–≥–æ useHttp, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞–≤–∏–º –µ–≥–æ –≤\n// –ø–∞–ø–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –Ω–µ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç.–∫. —ç—Ç–æ —É–∂–µ –Ω–µ –±–∞–∑–æ–≤–∞—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞\n// –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º API (marvelAPI).\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">Please select a character to see information</p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Skeleton from '../components/skeleton/Skeleton';\n\nconst setContent = (process, Component, data) => {\n  // –µ—Å–ª–∏ –ª–æ–≥–∏–∫–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤ –¥—Ä. –∫–ª–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –µ—ë –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n  // —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤–Ω—É—Ç—Ä—å http.hook –Ω–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å —Ç.–∫. –∂—Ç–æ —É–∂–µ –Ω–µ —Å–æ–≤—Å–µ–º –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ª–æ–≥–∏–∫–µ —Ö—É–∫–∞.\n  switch (process) {\n    case 'waiting':\n      return <Skeleton />;\n    // break;  // –µ—Å–ª–∏ –≤ case –µ—Å—Ç—å return —Ç–æ break –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –∫–æ–¥ –¥–∞–ª—å—à–µ –ø–æ –∫–µ–π—Å–∞–º –Ω–µ –ø–æ–π–¥–µ—Ç\n    case 'loading':\n      return <Spinner />;\n    case 'confirmed':\n      return <Component data={data} />;\n    case 'error':\n      return <ErrorMessage />;\n    default:\n      throw new Error('Unexpected process state');\n  }\n};\n\nexport default setContent;\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","ErrorImage","_ref","Component","dataType","id","useParams","data","setData","useState","process","setProcess","clearError","getComic","getCharacterByName","useMarvelService","useEffect","updateData","then","onDataLoaded","console","warn","concat","_Fragment","setContent","url","startsWith","replace","request","useHttp","useCallback","async","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","thumbnail","upgradeToHttps","path","extension","homepage","urls","wiki","comics","items","_transformComics","title","price","prices","pageCount","language","textObjects","getAllCharacters","offset","results","map","getCharacter","result","getAllComics","charName","Skeleton","Spinner"],"sourceRoot":""}